module AcceptAirdropRequestTrigger where

import Account
import qualified Daml.Trigger as T
import DA.Foldable
import DA.Action

-- Auto accept airdrop request from other users
-- Used to get Example Token quantities
acceptAirdropRequestTrigger: T.Trigger ()
acceptAirdropRequestTrigger = T.Trigger 
 { 
    initialize = pure (),
    updateState = \_  -> pure (),
    registeredTemplates = T.RegisteredTemplates [T.registeredTemplate @AirdropRequest],
    rule = \p -> do
      debug "ACCEPT AIRDROP TRIGGER FIRED"
      airdrop_requests <- T.query @AirdropRequest
      let isMe = (\request -> request.assetHoldingAccountIssuer == p)
      let meList = filter (\(_, contract) -> isMe contract) airdrop_requests
      let requests = map fst meList

      debug ("Requests", airdrop_requests)
      
      unless ( DA.Foldable.null requests ) do
        mapA_ (\request ->  T.dedupExercise request AirdropRequest_Accept) requests

    ,
    heartbeat = None
  }